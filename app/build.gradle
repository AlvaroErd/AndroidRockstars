plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id "dagger.hilt.android.plugin"
}

android {

    viewBinding {
        enabled = true
    }

    dataBinding {
        android.buildFeatures.dataBinding = true
    }

    def globalConfiguration = rootProject.extensions.getByName("ext")

    namespace 'com.mango.androidrockstars'
    compileSdk globalConfiguration["androidCompileSdkVersion"]

    defaultConfig {
        applicationId globalConfiguration["androidApplicationId"]
        minSdk globalConfiguration["androidMinSdkVersion"]
        targetSdk globalConfiguration["androidTargetSdkVersion"]
        versionCode globalConfiguration["androidVersionCode"]
        versionName globalConfiguration["androidVersionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            buildConfigField "String", "API_BASE_URL", '"https://api.themoviedb.org/3/"'
            buildConfigField "String", "API_KEY", '"6f54b113f248b6b52c4cb077769b03e6"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "String", "API_BASE_URL", '"https://api.themoviedb.org/3/"'
            buildConfigField "String", "API_KEY", '"6f54b113f248b6b52c4cb077769b03e6"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    def appDependencies = rootProject.ext.appDependencies
    def appTestDependencies = rootProject.ext.appTestDependencies

    implementation appDependencies.kotlin
    implementation appDependencies.coreKtx
    implementation appDependencies.lifecycle
    implementation appDependencies.compose
    implementation appDependencies.composeUi
    implementation appDependencies.composeUiToolingPreview
    implementation appDependencies.material
    implementation appDependencies.materialCompose
    implementation appDependencies.gson
    implementation appDependencies.retrofit
    implementation appDependencies.retrofitConverter
    implementation appDependencies.okHttp
    implementation appDependencies.coroutines
    implementation appDependencies.hilt
    implementation appDependencies.hiltCompose
    kapt appDependencies.kapt
    implementation appDependencies.coil
    implementation appDependencies.material3
    implementation appDependencies.material3Window
    implementation appDependencies.accompanist
    implementation appDependencies.navigationCompose
    implementation appDependencies.retrofit
    implementation appDependencies.retrofitConverter
    implementation appDependencies.okHttp
    implementation appDependencies.navigationRuntime
    implementation appDependencies.fragmentKtx
    implementation appDependencies.lifecycleViewModel
    implementation appDependencies.pagingCompose
    implementation appDependencies.pagingRuntime
    implementation appDependencies.navigationFragmentKtx
    implementation appDependencies.navigationUiKtx
    implementation appDependencies.splashScreen
    implementation appDependencies.constraintLayout
    implementation appDependencies.appcompat

    testImplementation appTestDependencies.jUnit

    androidTestImplementation appTestDependencies.androidJUnit
    androidTestImplementation appTestDependencies.espresso
    androidTestImplementation appTestDependencies.composeUiTestJUnit

    debugImplementation appTestDependencies.composeUiTooling
    debugImplementation appTestDependencies.composeUiTestManifest
}

kapt {
    correctErrorTypes = true
}
