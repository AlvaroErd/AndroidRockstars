plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {

    def globalConfiguration = rootProject.extensions.getByName("ext")

    namespace 'com.mango.androidrockstars'
    compileSdk globalConfiguration["androidCompileSdkVersion"]

    defaultConfig {
        applicationId globalConfiguration["androidApplicationId"]
        minSdk globalConfiguration["androidMinSdkVersion"]
        targetSdk globalConfiguration["androidTargetSdkVersion"]
        versionCode globalConfiguration["androidVersionCode"]
        versionName globalConfiguration["androidVersionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    def appDependencies = rootProject.ext.appDependencies
    def appTestDependencies = rootProject.ext.appTestDependencies

    implementation project(':domain')

    implementation appDependencies.kotlin
    implementation appDependencies.coreKtx
    implementation appDependencies.lifecycle
    implementation appDependencies.compose
    implementation appDependencies.composeUi
    implementation appDependencies.composeUiToolingPreview
    implementation appDependencies.material

    testImplementation appTestDependencies.jUnit

    androidTestImplementation appTestDependencies.androidJUnit
    androidTestImplementation appTestDependencies.espresso
    androidTestImplementation appTestDependencies.composeUiTestJUnit

    debugImplementation appTestDependencies.composeUiTooling
    debugImplementation appTestDependencies.composeUiTestManifest
}